// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
<View
  style={
    Object {
      "flex": 0.15,
      "flexDirection": "row",
    }
  }
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": undefined,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      }
    }
    viewIsInsideTabBar={false}
    virtual={undefined}
  >
    <View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": 0,
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRadius": undefined,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "borderWidth": undefined,
            "flexDirection": "row",
            "marginLeft": 2,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderBottomWidth": 0.5,
              "borderColor": "black",
              "borderLeftWidth": 0.5,
              "borderRadius": undefined,
              "borderRightWidth": 0.5,
              "borderTopWidth": 0.5,
              "borderWidth": undefined,
              "flexDirection": "row",
              "height": "80%",
              "marginLeft": 10,
              "marginTop": 5,
              "opacity": 1,
              "paddingLeft": 5,
              "width": "70%",
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
          <TextInput
            allowFontScaling={true}
            editable={true}
            onChangeText={[Function]}
            placeholderTextColor="#575757"
            style={
              Object {
                "color": "#000",
                "flex": 1,
                "fontSize": 17,
                "height": 50,
                "paddingLeft": 5,
                "paddingRight": 5,
                "top": 1.5,
              }
            }
            underlineColorAndroid="rgba(0,0,0,0)"
            value={undefined}
            virtual={undefined}
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderBottomWidth": 0,
              "borderColor": "#D9D5DC",
              "borderLeftWidth": 0,
              "borderRadius": undefined,
              "borderRightWidth": 0,
              "borderTopWidth": 0,
              "borderWidth": undefined,
              "flexDirection": "row",
              "height": "80%",
              "justifyContent": "center",
              "marginLeft": 2,
              "marginTop": 5,
              "opacity": 1,
              "paddingRight": 10,
              "width": "30%",
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "flex-start",
                "backgroundColor": "#62B1F6",
                "borderBottomWidth": null,
                "borderColor": "#007aff",
                "borderLeftWidth": null,
                "borderRadius": 5,
                "borderRightWidth": null,
                "borderTopWidth": null,
                "borderWidth": undefined,
                "elevation": 2,
                "flexDirection": "row",
                "height": 45,
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingBottom": 6,
                "paddingTop": 6,
                "shadowColor": undefined,
                "shadowOffset": undefined,
                "shadowOpacity": undefined,
                "shadowRadius": undefined,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "white",
                  "marginHorizontal": 20,
                  "textAlign": "center",
                }
              }
            >
              Search
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
